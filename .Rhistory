tables <- url %>% html_nodes("table")
# Verifique se há tabelas disponíveis e exiba a quantidade encontrada
cat("Número de tabelas encontradas:", length(tables), "\n")
# Se houver tabelas, extraia a primeira tabela como exemplo
if (length(tables) > 0) {
NBB_table <- tables[[1]] %>% html_table(fill = TRUE)
# Atribuir nomes temporários para colunas ausentes ou vazias
colnames(NBB_table)[is.na(colnames(NBB_table)) | colnames(NBB_table) == ""] <- paste0("V", seq_along(colnames(NBB_table))[is.na(colnames(NBB_table)) | colnames(NBB_table) == ""])
# Remover linhas indesejadas que contenham "\ue037 MAIS ESTATÍSTICAS"
NBB_table <- NBB_table %>%
filter(!grepl("\ue037 MAIS ESTATÍSTICAS", EQUIPES)) %>%
filter(!is.na(EQUIPES))
# Extrair apenas as três letras da coluna "EQUIPES"
equipes_simplificado <- NBB_table %>%
mutate(EQUIPES = str_extract(EQUIPES, "[A-Z]{3}")) %>%
filter(!is.na(EQUIPES))
# Substituir a coluna "EQUIPES" na tabela original pelas informações da nova tabela
NBB_table$EQUIPES <- equipes_simplificado$EQUIPES
# Salvar a coluna SAL antes de modificar as colunas
SAL_orig <- NBB_table$SAL
PRO_orig <- NBB_table$PRO
JOG_orig <- NBB_table$JOG
# Realocar os dados conforme as instruções fornecidas
NBB_table <- NBB_table %>%
mutate(
PON = JOG,
JOG = DER,
VIT = CASA,
DER = FORA,
CASA = PRO,
FORA = CON,
PRO = SAL,
CON = ULT,
SAL = PRO
)
# Remover as colunas "ULT", "V13" e "V14"
NBB_table <- NBB_table %>% select(-starts_with("ULT"), -starts_with("V"))
# Selecionar as colunas na ordem correta
NBB_table <- NBB_table %>%
select(EQUIPES, `AP(%)`, JOG, VIT, DER, CASA, FORA, PRO, CON, SAL, PON)
# Exibir a tabela modificada
print(NBB_table)
} else {
print("Nenhuma tabela encontrada na página.")
}
# Carregar as bibliotecas
library(rvest)
library(dplyr)
library(stringr)
# URL do site da NBB
url <- read_html("https://lnb.com.br/nbb/")
# Extrair a tabela diretamente usando rvest
tables <- url %>% html_nodes("table")
# Verifique se há tabelas disponíveis e exiba a quantidade encontrada
cat("Número de tabelas encontradas:", length(tables), "\n")
# Se houver tabelas, extraia a primeira tabela como exemplo
if (length(tables) > 0) {
NBB_table <- tables[[1]] %>% html_table(fill = TRUE)
# Atribuir nomes temporários para colunas ausentes ou vazias
colnames(NBB_table)[is.na(colnames(NBB_table)) | colnames(NBB_table) == ""] <- paste0("V", seq_along(colnames(NBB_table))[is.na(colnames(NBB_table)) | colnames(NBB_table) == ""])
# Remover linhas indesejadas que contenham "\ue037 MAIS ESTATÍSTICAS"
NBB_table <- NBB_table %>%
filter(!grepl("\ue037 MAIS ESTATÍSTICAS", EQUIPES)) %>%
filter(!is.na(EQUIPES))
# Extrair apenas as três letras da coluna "EQUIPES"
equipes_simplificado <- NBB_table %>%
mutate(EQUIPES = str_extract(EQUIPES, "[A-Z]{3}")) %>%
filter(!is.na(EQUIPES))
# Substituir a coluna "EQUIPES" na tabela original pelas informações da nova tabela
NBB_table$EQUIPES <- equipes_simplificado$EQUIPES
# Salvar a coluna SAL antes de modificar as colunas
SAL_orig <- NBB_table$SAL
# Realocar os dados conforme as instruções fornecidas
NBB_table <- NBB_table %>%
mutate(
PON = JOG,
JOG = DER,
VIT = CASA,
DER = FORA,
CASA = PRO,
FORA = CON,
PRO = SAL_orig,
CON = NA,
SAL = NA
)
# Remover as colunas "ULT", "V13" e "V14"
NBB_table <- NBB_table %>% select(-starts_with("ULT"), -starts_with("V"))
# Selecionar as colunas na ordem correta
NBB_table <- NBB_table %>%
select(EQUIPES, `AP(%)`, JOG, VIT, DER, CASA, FORA, PRO, CON, SAL, PON)
# Exibir a tabela modificada
print(NBB_table)
} else {
print("Nenhuma tabela encontrada na página.")
}
# Carregar as bibliotecas
library(rvest)
library(dplyr)
library(stringr)
# URL do site da NBB
url <- read_html("https://lnb.com.br/nbb/")
# Extrair a tabela diretamente usando rvest
tables <- url %>% html_nodes("table")
# Verifique se há tabelas disponíveis e exiba a quantidade encontrada
cat("Número de tabelas encontradas:", length(tables), "\n")
# Se houver tabelas, extraia a primeira tabela como exemplo
if (length(tables) > 0) {
NBB_table <- tables[[1]] %>% html_table(fill = TRUE)
# Atribuir nomes temporários para colunas ausentes ou vazias
colnames(NBB_table)[is.na(colnames(NBB_table)) | colnames(NBB_table) == ""] <- paste0("V", seq_along(colnames(NBB_table))[is.na(colnames(NBB_table)) | colnames(NBB_table) == ""])
# Remover linhas indesejadas que contenham "\ue037 MAIS ESTATÍSTICAS"
NBB_table <- NBB_table %>%
filter(!grepl("\ue037 MAIS ESTATÍSTICAS", EQUIPES)) %>%
filter(!is.na(EQUIPES))
# Extrair apenas as três letras da coluna "EQUIPES"
equipes_simplificado <- NBB_table %>%
mutate(EQUIPES = str_extract(EQUIPES, "[A-Z]{3}")) %>%
filter(!is.na(EQUIPES))
# Salvar a coluna SAL da tabela original antes de modificar as colunas
SAL_orig <- NBB_table$SAL
# Realocar os dados conforme as instruções fornecidas
NBB_table <- NBB_table %>%
mutate(
PON = JOG,
JOG = DER,
VIT = CASA,
DER = FORA,
CASA = PRO,
FORA = CON,
PRO = SAL_orig,
CON = NA,
SAL = NA
)
# Remover as colunas "ULT", "V13" e "V14"
NBB_table <- NBB_table %>% select(-ULT, -V13, -V14)
# Substituir a coluna "EQUIPES" na tabela original pelas informações da nova tabela
NBB_table$EQUIPES <- equipes_simplificado$EQUIPES
# Selecionar as colunas na ordem correta
NBB_table <- NBB_table %>%
select(EQUIPES, `AP(%)`, JOG, VIT, DER, CASA, FORA, PRO, CON, SAL, PON)
# Exibir a tabela modificada
print(NBB_table)
} else {
print("Nenhuma tabela encontrada na página.")
}
View(equipes_simplificado)
# URL do site da NBB
url <- read_html("https://lnb.com.br/nbb/")
# Extrair a tabela diretamente usando rvest
tables <- url %>% html_nodes("table")
# Verifique se há tabelas disponíveis e exiba a quantidade encontrada
cat("Número de tabelas encontradas:", length(tables), "\n")
# Se houver tabelas, extraia a primeira tabela como exemplo
if (length(tables) > 0) {
NBB_table <- tables[[1]] %>% html_table(fill = TRUE)
# Atribuir nomes temporários para colunas ausentes ou vazias
colnames(NBB_table)[is.na(colnames(NBB_table)) | colnames(NBB_table) == ""] <- paste0("V", seq_along(colnames(NBB_table))[is.na(colnames(NBB_table)) | colnames(NBB_table) == ""])
# Remover linhas indesejadas que contenham "\ue037 MAIS ESTATÍSTICAS"
NBB_table <- NBB_table %>%
filter(!grepl("\ue037 MAIS ESTATÍSTICAS", EQUIPES)) %>%
filter(!is.na(EQUIPES))
# Extrair apenas as três letras da coluna "EQUIPES"
equipes_simplificado <- NBB_table %>%
mutate(EQUIPES = str_extract(EQUIPES, "[A-Z]{3}")) %>%
filter(!is.na(EQUIPES))
# Salvar a coluna SAL da tabela original antes de modificar as colunas
SAL_orig <- NBB_table$SAL
# Realocar os dados conforme as instruções fornecidas
NBB_table <- NBB_table %>%
mutate(
PON = JOG,
JOG = DER,
VIT = CASA,
DER = FORA,
CASA = PRO,
FORA = CON,
PRO = SAL_orig,
CON = ULT,
SAL = NA
)
# Remover as colunas "ULT", "V13" e "V14"
NBB_table <- NBB_table %>% select(-ULT, -V13, -V14)
# Substituir a coluna "EQUIPES" na tabela original pelas informações da nova tabela
NBB_table$EQUIPES <- equipes_simplificado$EQUIPES
# Selecionar as colunas na ordem correta
NBB_table <- NBB_table %>%
select(EQUIPES, `AP(%)`, JOG, VIT, DER, CASA, FORA, PRO, CON, SAL, PON)
# Exibir a tabela modificada
print(NBB_table)
} else {
print("Nenhuma tabela encontrada na página.")
}
# Carregar as bibliotecas
library(rvest)
library(dplyr)
library(stringr)
# URL do site da NBB
url <- read_html("https://lnb.com.br/nbb/")
# Extrair a tabela diretamente usando rvest
tables <- url %>% html_nodes("table")
# Verifique se há tabelas disponíveis e exiba a quantidade encontrada
cat("Número de tabelas encontradas:", length(tables), "\n")
# Se houver tabelas, extraia a primeira tabela como exemplo
if (length(tables) > 0) {
NBB_table <- tables[[1]] %>% html_table(fill = TRUE)
# Atribuir nomes temporários para colunas ausentes ou vazias
colnames(NBB_table)[is.na(colnames(NBB_table)) | colnames(NBB_table) == ""] <- paste0("V", seq_along(colnames(NBB_table))[is.na(colnames(NBB_table)) | colnames(NBB_table) == ""])
# Remover linhas indesejadas que contenham "\ue037 MAIS ESTATÍSTICAS"
NBB_table <- NBB_table %>%
filter(!grepl("\ue037 MAIS ESTATÍSTICAS", EQUIPES)) %>%
filter(!is.na(EQUIPES))
# Extrair apenas as três letras da coluna "EQUIPES"
equipes_simplificado <- NBB_table %>%
mutate(EQUIPES = str_extract(EQUIPES, "[A-Z]{3}")) %>%
filter(!is.na(EQUIPES))
# Salvar a coluna SAL da tabela original antes de modificar as colunas
SAL_orig <- NBB_table$SAL
PRO_orig <- NBB_table$PRO
# Realocar os dados conforme as instruções fornecidas
NBB_table <- NBB_table %>%
mutate(
PON = JOG,
JOG = DER,
VIT = CASA,
DER = FORA,
CASA = PRO,
FORA = CON,
PRO = SAL_orig,
CON = ULT,
SAL = PRO_orig
)
# Remover as colunas "ULT", "V13" e "V14"
NBB_table <- NBB_table %>% select(-ULT, -V13, -V14)
# Substituir a coluna "EQUIPES" na tabela original pelas informações da nova tabela
NBB_table$EQUIPES <- equipes_simplificado$EQUIPES
# Selecionar as colunas na ordem correta
NBB_table <- NBB_table %>%
select(EQUIPES, `AP(%)`, JOG, VIT, DER, CASA, FORA, PRO, CON, SAL, PON)
# Exibir a tabela modificada
print(NBB_table)
} else {
print("Nenhuma tabela encontrada na página.")
}
# Carregar as bibliotecas
library(rvest)
library(dplyr)
library(stringr)
# URL do site da NBB
url <- read_html("https://lnb.com.br/nbb/")
# Extrair a tabela diretamente usando rvest
tables <- url %>% html_nodes("table")
# Verifique se há tabelas disponíveis e exiba a quantidade encontrada
cat("Número de tabelas encontradas:", length(tables), "\n")
# Se houver tabelas, extraia a primeira tabela como exemplo
if (length(tables) > 0) {
NBB_table <- tables[[1]] %>% html_table(fill = TRUE)
# Atribuir nomes temporários para colunas ausentes ou vazias
colnames(NBB_table)[is.na(colnames(NBB_table)) | colnames(NBB_table) == ""] <- paste0("V", seq_along(colnames(NBB_table))[is.na(colnames(NBB_table)) | colnames(NBB_table) == ""])
# Remover linhas indesejadas que contenham "\ue037 MAIS ESTATÍSTICAS"
NBB_table <- NBB_table %>%
filter(!grepl("\ue037 MAIS ESTATÍSTICAS", EQUIPES)) %>%
filter(!is.na(EQUIPES))
# Extrair apenas as três letras da coluna "EQUIPES"
equipes_simplificado <- NBB_table %>%
mutate(EQUIPES = str_extract(EQUIPES, "[A-Z]{3}")) %>%
filter(!is.na(EQUIPES))
# Salvar a coluna SAL da tabela original antes de modificar as colunas
SAL_orig <- NBB_table$SAL
PON_orig <- NBB_table$PON
# Realocar os dados conforme as instruções fornecidas
NBB_table <- NBB_table %>%
mutate(
PON = JOG,
JOG = DER,
VIT = CASA,
DER = FORA,
CASA = PRO,
FORA = CON,
PRO = SAL_orig,
CON = ULT,
SAL = PON_orig
)
# Remover as colunas "ULT", "V13" e "V14"
NBB_table <- NBB_table %>% select(-ULT, -V13, -V14)
# Substituir a coluna "EQUIPES" na tabela original pelas informações da nova tabela
NBB_table$EQUIPES <- equipes_simplificado$EQUIPES
# Selecionar as colunas na ordem correta
NBB_table <- NBB_table %>%
select(EQUIPES, `AP(%)`, JOG, VIT, DER, CASA, FORA, PRO, CON, SAL, PON)
# Exibir a tabela modificada
print(NBB_table)
} else {
print("Nenhuma tabela encontrada na página.")
}
rm(equipes_simplificado, PON_orig, SAL_orig, url, tables))
rm(equipes_simplificado, PON_orig, SAL_orig, url, tables)
View(NBB_table)
# Carregar as bibliotecas
library(rvest)
library(dplyr)
library(stringr)
# URL do site da NBB
url <- read_html("https://lnb.com.br/nbb/")
# Extrair a tabela diretamente usando rvest
tables <- url %>% html_nodes("table")
# Verifique se há tabelas disponíveis e exiba a quantidade encontrada
cat("Número de tabelas encontradas:", length(tables), "\n")
# Se houver tabelas, extraia a primeira tabela como exemplo
if (length(tables) > 0) {
NBB_table <- tables[[1]] %>% html_table(fill = TRUE)
# Atribuir nomes temporários para colunas ausentes ou vazias
colnames(NBB_table)[is.na(colnames(NBB_table)) | colnames(NBB_table) == ""] <- paste0("V", seq_along(colnames(NBB_table))[is.na(colnames(NBB_table)) | colnames(NBB_table) == ""])
# Remover linhas indesejadas que contenham "\ue037 MAIS ESTATÍSTICAS"
NBB_table <- NBB_table %>%
filter(!grepl("\ue037 MAIS ESTATÍSTICAS", EQUIPES)) %>%
filter(!is.na(EQUIPES))
# Extrair apenas as três letras da coluna "EQUIPES"
equipes_simplificado <- NBB_table %>%
mutate(EQUIPES = str_extract(EQUIPES, "[A-Z]{3}")) %>%
filter(!is.na(EQUIPES))
# Salvar a coluna SAL da tabela original antes de modificar as colunas
SAL_orig <- NBB_table$SAL
PON_orig <- NBB_table$PON
# Realocar os dados conforme as instruções fornecidas
NBB_table <- NBB_table %>%
mutate(
PON = JOG,
JOG = DER,
VIT = CASA,
DER = FORA,
CASA = PRO,
FORA = CON,
PRO = SAL_orig,
CON = ULT,
SAL = PON_orig
)
# Remover as colunas "ULT", "V13" e "V14"
NBB_table <- NBB_table %>% select(-ULT, -V13, -V14)
# Substituir a coluna "EQUIPES" na tabela original pelas informações da nova tabela
NBB_table$EQUIPES <- equipes_simplificado$EQUIPES
# Selecionar as colunas na ordem correta
NBB_table <- NBB_table %>%
select(EQUIPES, `AP(%)`, JOG, VIT, DER, CASA, FORA, PRO, CON, SAL, PON)
# Exibir a tabela modificada
print(NBB_table)
} else {
print("Nenhuma tabela encontrada na página.")
}
rm(equipes_simplificado, PON_orig, SAL_orig, url, tables)
# Criar um gráfico de barras
grafico <- ggplot(NBB_table, aes(x = EQUIPES, y = JOG)) +
geom_bar(stat = "identity") +
labs(title = "Quantidade de Jogos por Equipe",
x = "Equipe",
y = "Jogos") +
theme_minimal()
library(ggplot2)
library(gridExtra)
# Criar um gráfico de barras
grafico <- ggplot(NBB_table, aes(x = EQUIPES, y = JOG)) +
geom_bar(stat = "identity") +
labs(title = "Quantidade de Jogos por Equipe",
x = "Equipe",
y = "Jogos") +
theme_minimal()
# Criar uma tabela usando gridExtra
tabela <- tableGrob(NBB_table)
# Combinar o gráfico e a tabela
grid.arrange(grafico, tabela, ncol = 1)
# Criar um gráfico de barras
grafico <- ggplot(NBB_table, aes(x = EQUIPES, y = JOG)) +
geom_bar(stat = "identity") +
labs(title = "Quantidade de Jogos por Equipe",
x = "Equipe",
y = "Jogos") +
theme_minimal()
# Criar uma tabela usando gridExtra
tabela <- tableGrob(NBB_table)
# Combinar o gráfico e a tabela
grid.arrange(grafico, tabela, ncol = 1)
# Criar uma tabela usando gridExtra
tabela <- tableGrob(NBB_table)
# Exibir a tabela
grid.draw(tabela)
llibrary(grid)
library(grid)
# Criar uma tabela usando gridExtra
tabela <- tableGrob(NBB_table)
# Exibir a tabela
grid.draw(tabela)
View(NBB_table)
# Criar uma tabela usando gridExtra
tabela <- tableGrob(NBB_table)
# Carregar as bibliotecas
library(rvest)
library(dplyr)
library(stringr)
library(ggplot2)
library(gridExtra)
library(grid)
# URL do site da NBB
url <- read_html("https://lnb.com.br/nbb/")
# Extrair a tabela diretamente usando rvest
tables <- url %>% html_nodes("table")
# Verifique se há tabelas disponíveis e exiba a quantidade encontrada
cat("Número de tabelas encontradas:", length(tables), "\n")
# Se houver tabelas, extraia a primeira tabela como exemplo
if (length(tables) > 0) {
NBB_table <- tables[[1]] %>% html_table(fill = TRUE)
# Atribuir nomes temporários para colunas ausentes ou vazias
colnames(NBB_table)[is.na(colnames(NBB_table)) | colnames(NBB_table) == ""] <- paste0("V", seq_along(colnames(NBB_table))[is.na(colnames(NBB_table)) | colnames(NBB_table) == ""])
# Remover linhas indesejadas que contenham "\ue037 MAIS ESTATÍSTICAS"
NBB_table <- NBB_table %>%
filter(!grepl("\ue037 MAIS ESTATÍSTICAS", EQUIPES)) %>%
filter(!is.na(EQUIPES))
# Extrair apenas as três letras da coluna "EQUIPES"
equipes_simplificado <- NBB_table %>%
mutate(EQUIPES = str_extract(EQUIPES, "[A-Z]{3}")) %>%
filter(!is.na(EQUIPES))
# Salvar a coluna SAL da tabela original antes de modificar as colunas
SAL_orig <- NBB_table$SAL
PON_orig <- NBB_table$PON
# Realocar os dados conforme as instruções fornecidas
NBB_table <- NBB_table %>%
mutate(
PON = JOG,
JOG = DER,
VIT = CASA,
DER = FORA,
CASA = PRO,
FORA = CON,
PRO = SAL_orig,
CON = ULT,
SAL = PON_orig
)
# Remover as colunas "ULT", "V13" e "V14"
NBB_table <- NBB_table %>% select(-ULT, -V13, -V14)
# Substituir a coluna "EQUIPES" na tabela original pelas informações da nova tabela
NBB_table$EQUIPES <- equipes_simplificado$EQUIPES
# Selecionar as colunas na ordem correta
NBB_table <- NBB_table %>%
select(EQUIPES, `AP(%)`, JOG, VIT, DER, CASA, FORA, PRO, CON, SAL, PON)
# Exibir a tabela modificada
print(NBB_table)
} else {
print("Nenhuma tabela encontrada na página.")
}
rm(equipes_simplificado, PON_orig, SAL_orig, url, tables)
# Criar uma tabela usando gridExtra
tabela <- tableGrob(NBB_table)
# Exibir a tabela
grid.draw(tabela)
View(NBB_table)
# Carregar as bibliotecas
library(rvest)
library(dplyr)
library(stringr)
library(kableExtra)
# URL do site da NBB
url <- read_html("https://lnb.com.br/nbb/")
# Extrair a tabela diretamente usando rvest
tables <- url %>% html_nodes("table")
# Verifique se há tabelas disponíveis e exiba a quantidade encontrada
cat("Número de tabelas encontradas:", length(tables), "\n")
# Se houver tabelas, extraia a primeira tabela como exemplo
if (length(tables) > 0) {
NBB_table <- tables[[1]] %>% html_table(fill = TRUE)
# Atribuir nomes temporários para colunas ausentes ou vazias
colnames(NBB_table)[is.na(colnames(NBB_table)) | colnames(NBB_table) == ""] <- paste0("V", seq_along(colnames(NBB_table))[is.na(colnames(NBB_table)) | colnames(NBB_table) == ""])
# Remover linhas indesejadas que contenham "\ue037 MAIS ESTATÍSTICAS"
NBB_table <- NBB_table %>%
filter(!grepl("\ue037 MAIS ESTATÍSTICAS", EQUIPES)) %>%
filter(!is.na(EQUIPES))
# Extrair apenas as três letras da coluna "EQUIPES"
equipes_simplificado <- NBB_table %>%
mutate(EQUIPES = str_extract(EQUIPES, "[A-Z]{3}")) %>%
filter(!is.na(EQUIPES))
# Salvar a coluna SAL da tabela original antes de modificar as colunas
SAL_orig <- NBB_table$SAL
PON_orig <- NBB_table$PON
# Realocar os dados conforme as instruções fornecidas
NBB_table <- NBB_table %>%
mutate(
PON = JOG,
JOG = DER,
VIT = CASA,
DER = FORA,
CASA = PRO,
FORA = CON,
PRO = SAL_orig,
CON = ULT,
SAL = PON_orig
)
# Remover as colunas "ULT", "V13" e "V14"
NBB_table <- NBB_table %>% select(-ULT, -V13, -V14)
# Substituir a coluna "EQUIPES" na tabela original pelas informações da nova tabela
NBB_table$EQUIPES <- equipes_simplificado$EQUIPES
# Adicionar a coluna de classificação
NBB_table <- NBB_table %>%
mutate(CLASSIFICAÇÃO = row_number())
# Selecionar as colunas na ordem correta
NBB_table <- NBB_table %>%
select(CLASSIFICAÇÃO, EQUIPES, `AP(%)`, JOG, VIT, DER, CASA, FORA, PRO, CON, SAL, PON)
} else {
print("Nenhuma tabela encontrada na página.")
}
rm(equipes_simplificado, PON_orig, SAL_orig, url, tables)
# Exibir a tabela usando kableExtra com rolagem
NBB_table %>%
kable(format = "html", table.attr = 'class="table"') %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), full_width = F) %>%
scroll_box(height = "400px")
